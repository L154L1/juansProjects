package reverse_bits;

public class Solution {
	
	// you need treat n as an unsigned value
    public int reverseBits(int n) {
    	String bits = Integer.toBinaryString(n);
    	
    	if(n >= 0 && bits.length() < 32) {
    		int len = 32 - bits.length();
    		for(int i=0; i<len; i++)
    			bits = "0" + bits;
    	}
    	
    	//System.out.println(bits);
    	
    	String revbits = new StringBuilder(bits).reverse().toString();
    	//System.out.println(revbits);
    	
    	if(n<0) revbits = revbits.substring(1);
    	long ret = Integer.parseInt(revbits, 2);
    	
    	if(n<0) ret *= -1;
    	
    	return ret;        
    }   
    

	public static void main(String[] args) {
		Solution s = new Solution();
		
		System.out.println(s.reverseBits(43261596));
		
		System.out.println(s.reverseBits(-3));			// https://www.rapidtables.com/convert/number/binary-to-decimal.html
		
	}

}
